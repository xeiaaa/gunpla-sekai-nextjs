
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.0
 * Query Engine version: 1c57fdcd7e44b29b9313256c76699e91c3ac3c43
 */
Prisma.prismaVersion = {
  client: "6.16.0",
  engine: "1c57fdcd7e44b29b9313256c76699e91c3ac3c43"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.TimelineScalarFieldEnum = {
  id: 'id',
  name: 'name',
  slug: 'slug',
  description: 'description',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SeriesScalarFieldEnum = {
  id: 'id',
  name: 'name',
  slug: 'slug',
  description: 'description',
  timelineId: 'timelineId',
  scrapedImages: 'scrapedImages',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.MobileSuitScalarFieldEnum = {
  id: 'id',
  name: 'name',
  slug: 'slug',
  description: 'description',
  seriesId: 'seriesId',
  scrapedImages: 'scrapedImages',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.GradeScalarFieldEnum = {
  id: 'id',
  name: 'name',
  slug: 'slug',
  description: 'description',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ProductLineScalarFieldEnum = {
  id: 'id',
  name: 'name',
  slug: 'slug',
  description: 'description',
  gradeId: 'gradeId',
  logoId: 'logoId',
  scrapedImage: 'scrapedImage',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ReleaseTypeScalarFieldEnum = {
  id: 'id',
  name: 'name',
  slug: 'slug',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.KitScalarFieldEnum = {
  id: 'id',
  name: 'name',
  slug: 'slug',
  number: 'number',
  variant: 'variant',
  releaseDate: 'releaseDate',
  priceYen: 'priceYen',
  region: 'region',
  boxArt: 'boxArt',
  notes: 'notes',
  manualLinks: 'manualLinks',
  scrapedImages: 'scrapedImages',
  potentialBaseKit: 'potentialBaseKit',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  gradeId: 'gradeId',
  productLineId: 'productLineId',
  seriesId: 'seriesId',
  releaseTypeId: 'releaseTypeId',
  baseKitId: 'baseKitId'
};

exports.Prisma.KitMobileSuitScalarFieldEnum = {
  id: 'id',
  kitId: 'kitId',
  mobileSuitId: 'mobileSuitId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.UploadScalarFieldEnum = {
  id: 'id',
  cloudinaryAssetId: 'cloudinaryAssetId',
  publicId: 'publicId',
  url: 'url',
  eagerUrl: 'eagerUrl',
  format: 'format',
  resourceType: 'resourceType',
  size: 'size',
  pages: 'pages',
  originalFilename: 'originalFilename',
  uploadedAt: 'uploadedAt',
  uploadedById: 'uploadedById',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.KitUploadScalarFieldEnum = {
  id: 'id',
  kitId: 'kitId',
  uploadId: 'uploadId',
  caption: 'caption',
  order: 'order',
  type: 'type',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.MobileSuitUploadScalarFieldEnum = {
  id: 'id',
  mobileSuitId: 'mobileSuitId',
  uploadId: 'uploadId',
  caption: 'caption',
  order: 'order',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};
exports.KitImageType = exports.$Enums.KitImageType = {
  BOX_ART: 'BOX_ART',
  PRODUCT_SHOTS: 'PRODUCT_SHOTS',
  RUNNERS: 'RUNNERS',
  MANUAL: 'MANUAL',
  PROTOTYPE: 'PROTOTYPE'
};

exports.Prisma.ModelName = {
  Timeline: 'Timeline',
  Series: 'Series',
  MobileSuit: 'MobileSuit',
  Grade: 'Grade',
  ProductLine: 'ProductLine',
  ReleaseType: 'ReleaseType',
  Kit: 'Kit',
  KitMobileSuit: 'KitMobileSuit',
  Upload: 'Upload',
  KitUpload: 'KitUpload',
  MobileSuitUpload: 'MobileSuitUpload'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "/Users/dia/dev/projects/gunpla-sekai/generated/prisma",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "darwin-arm64",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "/Users/dia/dev/projects/gunpla-sekai/prisma/schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": "../../.env",
    "schemaEnvPath": "../../.env"
  },
  "relativePath": "../../prisma",
  "clientVersion": "6.16.0",
  "engineVersion": "1c57fdcd7e44b29b9313256c76699e91c3ac3c43",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "postinstall": false,
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "// This is your Prisma schema file,\n// learn more about it in the docs: https://pris.ly/d/prisma-schema\n\n// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?\n// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init\n\ngenerator client {\n  provider = \"prisma-client-js\"\n  output   = \"../generated/prisma\"\n}\n\ndatasource db {\n  provider = \"postgresql\"\n  url      = env(\"DATABASE_URL\")\n}\n\n// Timeline represents the fictional universe timelines (Universal Century, After Colony, etc.)\nmodel Timeline {\n  id          String   @id @default(cuid())\n  name        String   @unique\n  slug        String?  @unique\n  description String?\n  createdAt   DateTime @default(now())\n  updatedAt   DateTime @updatedAt\n\n  // Relations\n  series Series[]\n\n  @@map(\"timelines\")\n}\n\n// Series represents anime/manga series (Mobile Suit Gundam, Zeta Gundam, etc.)\nmodel Series {\n  id            String   @id @default(cuid())\n  name          String   @unique\n  slug          String?  @unique\n  description   String?\n  timelineId    String?\n  scrapedImages String[] @default([])\n  createdAt     DateTime @default(now())\n  updatedAt     DateTime @updatedAt\n\n  // Relations\n  timeline    Timeline?    @relation(fields: [timelineId], references: [id], onDelete: SetNull)\n  mobileSuits MobileSuit[]\n  kits        Kit[]\n\n  @@map(\"series\")\n}\n\n// MobileSuit represents the mecha/robot designs (RX-78-2 Gundam, Zaku II, etc.)\nmodel MobileSuit {\n  id            String   @id @default(cuid())\n  name          String   @unique\n  slug          String?  @unique\n  description   String?\n  seriesId      String?\n  scrapedImages String[] @default([])\n  createdAt     DateTime @default(now())\n  updatedAt     DateTime @updatedAt\n\n  // Relations\n  series  Series?            @relation(fields: [seriesId], references: [id], onDelete: SetNull)\n  kits    KitMobileSuit[]\n  uploads MobileSuitUpload[]\n\n  @@map(\"mobile_suits\")\n}\n\n// Grade represents the classification system (HG, RG, MG, PG, etc.)\nmodel Grade {\n  id          String   @id @default(cuid())\n  name        String   @unique\n  slug        String?  @unique\n  description String?\n  createdAt   DateTime @default(now())\n  updatedAt   DateTime @updatedAt\n\n  // Relations\n  productLines ProductLine[]\n  kits         Kit[]\n\n  @@map(\"grades\")\n}\n\n// ProductLine represents specific product lines within grades (HGUC, MGEX, PG Unleashed, etc.)\nmodel ProductLine {\n  id           String   @id @default(cuid())\n  name         String   @unique\n  slug         String?  @unique\n  description  String?\n  gradeId      String\n  logoId       String?\n  scrapedImage String?\n  createdAt    DateTime @default(now())\n  updatedAt    DateTime @updatedAt\n\n  // Relations\n  grade Grade   @relation(fields: [gradeId], references: [id], onDelete: Cascade)\n  logo  Upload? @relation(fields: [logoId], references: [id], onDelete: SetNull)\n  kits  Kit[]\n\n  @@map(\"product_lines\")\n}\n\n// ReleaseType represents how a kit is released (Retail, P-Bandai, Gundam Base, etc.)\nmodel ReleaseType {\n  id        String   @id @default(cuid())\n  name      String   @unique\n  slug      String   @unique\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  // Relations\n  kits Kit[]\n\n  @@map(\"release_types\")\n}\n\n// Kit represents the main entity - individual Gunpla kits\nmodel Kit {\n  id               String    @id @default(cuid())\n  name             String\n  slug             String?   @unique\n  number           String\n  variant          String?\n  releaseDate      DateTime?\n  priceYen         Int?\n  region           String?\n  boxArt           String? // Cloudinary URL\n  notes            String?\n  manualLinks      String[]  @default([])\n  scrapedImages    String[]  @default([])\n  potentialBaseKit String? // Potential base kit reference\n  createdAt        DateTime  @default(now())\n  updatedAt        DateTime  @updatedAt\n\n  // Foreign keys\n  gradeId       String\n  productLineId String?\n  seriesId      String?\n  releaseTypeId String?\n  baseKitId     String?\n\n  // Relations\n  grade       Grade           @relation(fields: [gradeId], references: [id], onDelete: Cascade)\n  productLine ProductLine?    @relation(fields: [productLineId], references: [id], onDelete: SetNull)\n  series      Series?         @relation(fields: [seriesId], references: [id], onDelete: SetNull)\n  releaseType ReleaseType?    @relation(fields: [releaseTypeId], references: [id], onDelete: SetNull)\n  baseKit     Kit?            @relation(\"KitVariants\", fields: [baseKitId], references: [id], onDelete: SetNull)\n  variants    Kit[]           @relation(\"KitVariants\")\n  mobileSuits KitMobileSuit[]\n  uploads     KitUpload[]\n\n  @@map(\"kits\")\n}\n\n// Junction table for many-to-many relationship between Kit and MobileSuit\nmodel KitMobileSuit {\n  id           String   @id @default(cuid())\n  kitId        String\n  mobileSuitId String\n  createdAt    DateTime @default(now())\n  updatedAt    DateTime @updatedAt\n\n  // Relations\n  kit        Kit        @relation(fields: [kitId], references: [id], onDelete: Cascade)\n  mobileSuit MobileSuit @relation(fields: [mobileSuitId], references: [id], onDelete: Cascade)\n\n  @@unique([kitId, mobileSuitId])\n  @@map(\"kit_mobile_suits\")\n}\n\n// Upload represents files uploaded to Cloudinary\nmodel Upload {\n  id                String   @id @default(cuid())\n  cloudinaryAssetId String   @unique\n  publicId          String\n  url               String\n  eagerUrl          String?\n  format            String\n  resourceType      String\n  size              Int\n  pages             Int?\n  originalFilename  String\n  uploadedAt        DateTime\n  uploadedById      String // FK to User who uploaded the file\n  createdAt         DateTime @default(now())\n  updatedAt         DateTime @updatedAt\n\n  // Relations\n  kitUploads        KitUpload[]\n  mobileSuitUploads MobileSuitUpload[]\n  productLineLogos  ProductLine[]\n\n  @@map(\"uploads\")\n}\n\n// KitImageType enum for categorizing kit images\nenum KitImageType {\n  BOX_ART\n  PRODUCT_SHOTS\n  RUNNERS\n  MANUAL\n  PROTOTYPE\n}\n\n// Junction table for many-to-many relationship between Kit and Upload\nmodel KitUpload {\n  id        String       @id @default(cuid())\n  kitId     String\n  uploadId  String\n  caption   String?\n  order     Int?\n  type      KitImageType\n  createdAt DateTime     @default(now())\n  updatedAt DateTime     @updatedAt\n\n  // Relations\n  kit    Kit    @relation(fields: [kitId], references: [id], onDelete: Cascade)\n  upload Upload @relation(fields: [uploadId], references: [id], onDelete: Cascade)\n\n  @@unique([kitId, uploadId])\n  @@map(\"kit_uploads\")\n}\n\n// Junction table for many-to-many relationship between MobileSuit and Upload\nmodel MobileSuitUpload {\n  id           String   @id @default(cuid())\n  mobileSuitId String\n  uploadId     String\n  caption      String?\n  order        Int?\n  createdAt    DateTime @default(now())\n  updatedAt    DateTime @updatedAt\n\n  // Relations\n  mobileSuit MobileSuit @relation(fields: [mobileSuitId], references: [id], onDelete: Cascade)\n  upload     Upload     @relation(fields: [uploadId], references: [id], onDelete: Cascade)\n\n  @@unique([mobileSuitId, uploadId])\n  @@map(\"mobile_suit_uploads\")\n}\n",
  "inlineSchemaHash": "636fd61c2b5b7bb569f74cc0755b5aadf504b1b0ad2599e51f54bb3beb2a742c",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"Timeline\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"slug\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"series\",\"kind\":\"object\",\"type\":\"Series\",\"relationName\":\"SeriesToTimeline\"}],\"dbName\":\"timelines\"},\"Series\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"slug\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"timelineId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"scrapedImages\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"timeline\",\"kind\":\"object\",\"type\":\"Timeline\",\"relationName\":\"SeriesToTimeline\"},{\"name\":\"mobileSuits\",\"kind\":\"object\",\"type\":\"MobileSuit\",\"relationName\":\"MobileSuitToSeries\"},{\"name\":\"kits\",\"kind\":\"object\",\"type\":\"Kit\",\"relationName\":\"KitToSeries\"}],\"dbName\":\"series\"},\"MobileSuit\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"slug\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"seriesId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"scrapedImages\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"series\",\"kind\":\"object\",\"type\":\"Series\",\"relationName\":\"MobileSuitToSeries\"},{\"name\":\"kits\",\"kind\":\"object\",\"type\":\"KitMobileSuit\",\"relationName\":\"KitMobileSuitToMobileSuit\"},{\"name\":\"uploads\",\"kind\":\"object\",\"type\":\"MobileSuitUpload\",\"relationName\":\"MobileSuitToMobileSuitUpload\"}],\"dbName\":\"mobile_suits\"},\"Grade\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"slug\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"productLines\",\"kind\":\"object\",\"type\":\"ProductLine\",\"relationName\":\"GradeToProductLine\"},{\"name\":\"kits\",\"kind\":\"object\",\"type\":\"Kit\",\"relationName\":\"GradeToKit\"}],\"dbName\":\"grades\"},\"ProductLine\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"slug\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"gradeId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"logoId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"scrapedImage\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"grade\",\"kind\":\"object\",\"type\":\"Grade\",\"relationName\":\"GradeToProductLine\"},{\"name\":\"logo\",\"kind\":\"object\",\"type\":\"Upload\",\"relationName\":\"ProductLineToUpload\"},{\"name\":\"kits\",\"kind\":\"object\",\"type\":\"Kit\",\"relationName\":\"KitToProductLine\"}],\"dbName\":\"product_lines\"},\"ReleaseType\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"slug\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"kits\",\"kind\":\"object\",\"type\":\"Kit\",\"relationName\":\"KitToReleaseType\"}],\"dbName\":\"release_types\"},\"Kit\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"slug\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"number\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"variant\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"releaseDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"priceYen\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"region\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"boxArt\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"notes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"manualLinks\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"scrapedImages\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"potentialBaseKit\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"gradeId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"productLineId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"seriesId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"releaseTypeId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"baseKitId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"grade\",\"kind\":\"object\",\"type\":\"Grade\",\"relationName\":\"GradeToKit\"},{\"name\":\"productLine\",\"kind\":\"object\",\"type\":\"ProductLine\",\"relationName\":\"KitToProductLine\"},{\"name\":\"series\",\"kind\":\"object\",\"type\":\"Series\",\"relationName\":\"KitToSeries\"},{\"name\":\"releaseType\",\"kind\":\"object\",\"type\":\"ReleaseType\",\"relationName\":\"KitToReleaseType\"},{\"name\":\"baseKit\",\"kind\":\"object\",\"type\":\"Kit\",\"relationName\":\"KitVariants\"},{\"name\":\"variants\",\"kind\":\"object\",\"type\":\"Kit\",\"relationName\":\"KitVariants\"},{\"name\":\"mobileSuits\",\"kind\":\"object\",\"type\":\"KitMobileSuit\",\"relationName\":\"KitToKitMobileSuit\"},{\"name\":\"uploads\",\"kind\":\"object\",\"type\":\"KitUpload\",\"relationName\":\"KitToKitUpload\"}],\"dbName\":\"kits\"},\"KitMobileSuit\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"kitId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"mobileSuitId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"kit\",\"kind\":\"object\",\"type\":\"Kit\",\"relationName\":\"KitToKitMobileSuit\"},{\"name\":\"mobileSuit\",\"kind\":\"object\",\"type\":\"MobileSuit\",\"relationName\":\"KitMobileSuitToMobileSuit\"}],\"dbName\":\"kit_mobile_suits\"},\"Upload\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"cloudinaryAssetId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"publicId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"url\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"eagerUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"format\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"resourceType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"size\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"pages\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"originalFilename\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"uploadedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"uploadedById\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"kitUploads\",\"kind\":\"object\",\"type\":\"KitUpload\",\"relationName\":\"KitUploadToUpload\"},{\"name\":\"mobileSuitUploads\",\"kind\":\"object\",\"type\":\"MobileSuitUpload\",\"relationName\":\"MobileSuitUploadToUpload\"},{\"name\":\"productLineLogos\",\"kind\":\"object\",\"type\":\"ProductLine\",\"relationName\":\"ProductLineToUpload\"}],\"dbName\":\"uploads\"},\"KitUpload\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"kitId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"uploadId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"caption\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"order\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"type\",\"kind\":\"enum\",\"type\":\"KitImageType\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"kit\",\"kind\":\"object\",\"type\":\"Kit\",\"relationName\":\"KitToKitUpload\"},{\"name\":\"upload\",\"kind\":\"object\",\"type\":\"Upload\",\"relationName\":\"KitUploadToUpload\"}],\"dbName\":\"kit_uploads\"},\"MobileSuitUpload\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"mobileSuitId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"uploadId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"caption\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"order\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"mobileSuit\",\"kind\":\"object\",\"type\":\"MobileSuit\",\"relationName\":\"MobileSuitToMobileSuitUpload\"},{\"name\":\"upload\",\"kind\":\"object\",\"type\":\"Upload\",\"relationName\":\"MobileSuitUploadToUpload\"}],\"dbName\":\"mobile_suit_uploads\"}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

