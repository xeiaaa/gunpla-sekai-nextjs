
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.0
 * Query Engine version: 1c57fdcd7e44b29b9313256c76699e91c3ac3c43
 */
Prisma.prismaVersion = {
  client: "6.16.0",
  engine: "1c57fdcd7e44b29b9313256c76699e91c3ac3c43"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.TimelineScalarFieldEnum = {
  id: 'id',
  name: 'name',
  slug: 'slug',
  description: 'description',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SeriesScalarFieldEnum = {
  id: 'id',
  name: 'name',
  slug: 'slug',
  description: 'description',
  timelineId: 'timelineId',
  scrapedImages: 'scrapedImages',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.MobileSuitScalarFieldEnum = {
  id: 'id',
  name: 'name',
  slug: 'slug',
  description: 'description',
  seriesId: 'seriesId',
  scrapedImages: 'scrapedImages',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.GradeScalarFieldEnum = {
  id: 'id',
  name: 'name',
  slug: 'slug',
  description: 'description',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ProductLineScalarFieldEnum = {
  id: 'id',
  name: 'name',
  slug: 'slug',
  description: 'description',
  gradeId: 'gradeId',
  logoId: 'logoId',
  scrapedImage: 'scrapedImage',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ReleaseTypeScalarFieldEnum = {
  id: 'id',
  name: 'name',
  slug: 'slug',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.KitScalarFieldEnum = {
  id: 'id',
  name: 'name',
  slug: 'slug',
  number: 'number',
  variant: 'variant',
  releaseDate: 'releaseDate',
  priceYen: 'priceYen',
  region: 'region',
  boxArt: 'boxArt',
  notes: 'notes',
  manualLinks: 'manualLinks',
  scrapedImages: 'scrapedImages',
  potentialBaseKit: 'potentialBaseKit',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  productLineId: 'productLineId',
  seriesId: 'seriesId',
  releaseTypeId: 'releaseTypeId',
  baseKitId: 'baseKitId'
};

exports.Prisma.KitMobileSuitScalarFieldEnum = {
  id: 'id',
  kitId: 'kitId',
  mobileSuitId: 'mobileSuitId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.UploadScalarFieldEnum = {
  id: 'id',
  cloudinaryAssetId: 'cloudinaryAssetId',
  publicId: 'publicId',
  url: 'url',
  eagerUrl: 'eagerUrl',
  format: 'format',
  resourceType: 'resourceType',
  size: 'size',
  pages: 'pages',
  originalFilename: 'originalFilename',
  uploadedAt: 'uploadedAt',
  uploadedById: 'uploadedById',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.KitUploadScalarFieldEnum = {
  id: 'id',
  kitId: 'kitId',
  uploadId: 'uploadId',
  caption: 'caption',
  order: 'order',
  type: 'type',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.MobileSuitUploadScalarFieldEnum = {
  id: 'id',
  mobileSuitId: 'mobileSuitId',
  uploadId: 'uploadId',
  caption: 'caption',
  order: 'order',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.BuildMilestoneUploadScalarFieldEnum = {
  id: 'id',
  buildMilestoneId: 'buildMilestoneId',
  uploadId: 'uploadId',
  caption: 'caption',
  order: 'order',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  email: 'email',
  username: 'username',
  firstName: 'firstName',
  lastName: 'lastName',
  imageUrl: 'imageUrl',
  avatarUrl: 'avatarUrl',
  isAdmin: 'isAdmin',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  bio: 'bio',
  instagramUrl: 'instagramUrl',
  twitterUrl: 'twitterUrl',
  youtubeUrl: 'youtubeUrl',
  portfolioUrl: 'portfolioUrl',
  bannerImageUrl: 'bannerImageUrl',
  themeColor: 'themeColor',
  isPublic: 'isPublic',
  showCollections: 'showCollections',
  showBuilds: 'showBuilds',
  showActivity: 'showActivity',
  showBadges: 'showBadges',
  emailNotifications: 'emailNotifications'
};

exports.Prisma.UserKitCollectionScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  kitId: 'kitId',
  status: 'status',
  notes: 'notes',
  addedAt: 'addedAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ReviewScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  kitId: 'kitId',
  title: 'title',
  content: 'content',
  overallScore: 'overallScore',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ReviewScoreScalarFieldEnum = {
  id: 'id',
  reviewId: 'reviewId',
  category: 'category',
  score: 'score',
  notes: 'notes'
};

exports.Prisma.BuildScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  kitId: 'kitId',
  title: 'title',
  description: 'description',
  status: 'status',
  startedAt: 'startedAt',
  completedAt: 'completedAt',
  featuredImageId: 'featuredImageId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.BuildMilestoneScalarFieldEnum = {
  id: 'id',
  buildId: 'buildId',
  type: 'type',
  title: 'title',
  description: 'description',
  imageUrls: 'imageUrls',
  completedAt: 'completedAt',
  order: 'order',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.BuildCommentScalarFieldEnum = {
  id: 'id',
  buildId: 'buildId',
  userId: 'userId',
  content: 'content',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.UserStoreScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  name: 'name',
  description: 'description',
  location: 'location',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.MarketplaceListingScalarFieldEnum = {
  id: 'id',
  storeId: 'storeId',
  kitId: 'kitId',
  title: 'title',
  description: 'description',
  price: 'price',
  currency: 'currency',
  imageUrls: 'imageUrls',
  available: 'available',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};
exports.KitImageType = exports.$Enums.KitImageType = {
  BOX_ART: 'BOX_ART',
  PRODUCT_SHOTS: 'PRODUCT_SHOTS',
  RUNNERS: 'RUNNERS',
  MANUAL: 'MANUAL',
  PROTOTYPE: 'PROTOTYPE'
};

exports.CollectionStatus = exports.$Enums.CollectionStatus = {
  WISHLIST: 'WISHLIST',
  PREORDER: 'PREORDER',
  BACKLOG: 'BACKLOG',
  IN_PROGRESS: 'IN_PROGRESS',
  BUILT: 'BUILT'
};

exports.ReviewCategory = exports.$Enums.ReviewCategory = {
  BUILD_QUALITY_ENGINEERING: 'BUILD_QUALITY_ENGINEERING',
  ARTICULATION_POSEABILITY: 'ARTICULATION_POSEABILITY',
  DETAIL_ACCURACY: 'DETAIL_ACCURACY',
  AESTHETICS_PROPORTIONS: 'AESTHETICS_PROPORTIONS',
  ACCESSORIES_GIMMICKS: 'ACCESSORIES_GIMMICKS',
  VALUE_EXPERIENCE: 'VALUE_EXPERIENCE'
};

exports.BuildStatus = exports.$Enums.BuildStatus = {
  PLANNING: 'PLANNING',
  IN_PROGRESS: 'IN_PROGRESS',
  COMPLETED: 'COMPLETED',
  ON_HOLD: 'ON_HOLD'
};

exports.MilestoneType = exports.$Enums.MilestoneType = {
  ACQUISITION: 'ACQUISITION',
  PLANNING: 'PLANNING',
  BUILD: 'BUILD',
  PAINTING: 'PAINTING',
  PANEL_LINING: 'PANEL_LINING',
  DECALS: 'DECALS',
  TOPCOAT: 'TOPCOAT',
  PHOTOGRAPHY: 'PHOTOGRAPHY',
  COMPLETION: 'COMPLETION'
};

exports.Prisma.ModelName = {
  Timeline: 'Timeline',
  Series: 'Series',
  MobileSuit: 'MobileSuit',
  Grade: 'Grade',
  ProductLine: 'ProductLine',
  ReleaseType: 'ReleaseType',
  Kit: 'Kit',
  KitMobileSuit: 'KitMobileSuit',
  Upload: 'Upload',
  KitUpload: 'KitUpload',
  MobileSuitUpload: 'MobileSuitUpload',
  BuildMilestoneUpload: 'BuildMilestoneUpload',
  User: 'User',
  UserKitCollection: 'UserKitCollection',
  Review: 'Review',
  ReviewScore: 'ReviewScore',
  Build: 'Build',
  BuildMilestone: 'BuildMilestone',
  BuildComment: 'BuildComment',
  UserStore: 'UserStore',
  MarketplaceListing: 'MarketplaceListing'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "/Users/dia/dev/projects/gunpla-sekai/generated/prisma",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "darwin-arm64",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "/Users/dia/dev/projects/gunpla-sekai/prisma/schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../.env"
  },
  "relativePath": "../../prisma",
  "clientVersion": "6.16.0",
  "engineVersion": "1c57fdcd7e44b29b9313256c76699e91c3ac3c43",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "postinstall": false,
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "// This is your Prisma schema file,\n// learn more about it in the docs: https://pris.ly/d/prisma-schema\n\n// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?\n// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init\n\ngenerator client {\n  provider = \"prisma-client-js\"\n  output   = \"../generated/prisma\"\n}\n\ndatasource db {\n  provider = \"postgresql\"\n  url      = env(\"DATABASE_URL\")\n}\n\n// Timeline represents the fictional universe timelines (Universal Century, After Colony, etc.)\nmodel Timeline {\n  id          String   @id @default(cuid())\n  name        String   @unique\n  slug        String?  @unique\n  description String?\n  createdAt   DateTime @default(now())\n  updatedAt   DateTime @updatedAt\n\n  // Relations\n  series Series[]\n\n  @@map(\"timelines\")\n}\n\n// Series represents anime/manga series (Mobile Suit Gundam, Zeta Gundam, etc.)\nmodel Series {\n  id            String   @id @default(cuid())\n  name          String   @unique\n  slug          String?  @unique\n  description   String?\n  timelineId    String?\n  scrapedImages String[] @default([])\n  createdAt     DateTime @default(now())\n  updatedAt     DateTime @updatedAt\n\n  // Relations\n  timeline    Timeline?    @relation(fields: [timelineId], references: [id], onDelete: SetNull)\n  mobileSuits MobileSuit[]\n  kits        Kit[]\n\n  @@map(\"series\")\n}\n\n// MobileSuit represents the mecha/robot designs (RX-78-2 Gundam, Zaku II, etc.)\nmodel MobileSuit {\n  id            String   @id @default(cuid())\n  name          String   @unique\n  slug          String?  @unique\n  description   String?\n  seriesId      String?\n  scrapedImages String[] @default([])\n  createdAt     DateTime @default(now())\n  updatedAt     DateTime @updatedAt\n\n  // Relations\n  series  Series?            @relation(fields: [seriesId], references: [id], onDelete: SetNull)\n  kits    KitMobileSuit[]\n  uploads MobileSuitUpload[]\n\n  @@map(\"mobile_suits\")\n}\n\n// Grade represents the classification system (HG, RG, MG, PG, etc.)\nmodel Grade {\n  id          String   @id @default(cuid())\n  name        String   @unique\n  slug        String?  @unique\n  description String?\n  createdAt   DateTime @default(now())\n  updatedAt   DateTime @updatedAt\n\n  // Relations\n  productLines ProductLine[]\n\n  @@map(\"grades\")\n}\n\n// ProductLine represents specific product lines within grades (HGUC, MGEX, PG Unleashed, etc.)\nmodel ProductLine {\n  id           String   @id @default(cuid())\n  name         String   @unique\n  slug         String?  @unique\n  description  String?\n  gradeId      String\n  logoId       String?\n  scrapedImage String?\n  createdAt    DateTime @default(now())\n  updatedAt    DateTime @updatedAt\n\n  // Relations\n  grade Grade   @relation(fields: [gradeId], references: [id], onDelete: Cascade)\n  logo  Upload? @relation(fields: [logoId], references: [id], onDelete: SetNull)\n  kits  Kit[]\n\n  @@map(\"product_lines\")\n}\n\n// ReleaseType represents how a kit is released (Retail, P-Bandai, Gundam Base, etc.)\nmodel ReleaseType {\n  id        String   @id @default(cuid())\n  name      String   @unique\n  slug      String   @unique\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  // Relations\n  kits Kit[]\n\n  @@map(\"release_types\")\n}\n\n// Kit represents the main entity - individual Gunpla kits\nmodel Kit {\n  id               String    @id @default(cuid())\n  name             String\n  slug             String?   @unique\n  number           String\n  variant          String?\n  releaseDate      DateTime?\n  priceYen         Int?\n  region           String?\n  boxArt           String? // Cloudinary URL\n  notes            String?\n  manualLinks      String[]  @default([])\n  scrapedImages    String[]  @default([])\n  potentialBaseKit String? // Potential base kit reference\n  createdAt        DateTime  @default(now())\n  updatedAt        DateTime  @updatedAt\n\n  // Foreign keys\n  productLineId String?\n  seriesId      String?\n  releaseTypeId String?\n  baseKitId     String?\n\n  // Relations\n  productLine ProductLine?         @relation(fields: [productLineId], references: [id], onDelete: SetNull)\n  series      Series?              @relation(fields: [seriesId], references: [id], onDelete: SetNull)\n  releaseType ReleaseType?         @relation(fields: [releaseTypeId], references: [id], onDelete: SetNull)\n  baseKit     Kit?                 @relation(\"KitVariants\", fields: [baseKitId], references: [id], onDelete: SetNull)\n  variants    Kit[]                @relation(\"KitVariants\")\n  mobileSuits KitMobileSuit[]\n  uploads     KitUpload[]\n  collections UserKitCollection[]\n  reviews     Review[]\n  builds      Build[]\n  listings    MarketplaceListing[]\n\n  @@map(\"kits\")\n}\n\n// Junction table for many-to-many relationship between Kit and MobileSuit\nmodel KitMobileSuit {\n  id           String   @id @default(cuid())\n  kitId        String\n  mobileSuitId String\n  createdAt    DateTime @default(now())\n  updatedAt    DateTime @updatedAt\n\n  // Relations\n  kit        Kit        @relation(fields: [kitId], references: [id], onDelete: Cascade)\n  mobileSuit MobileSuit @relation(fields: [mobileSuitId], references: [id], onDelete: Cascade)\n\n  @@unique([kitId, mobileSuitId])\n  @@map(\"kit_mobile_suits\")\n}\n\n// Upload represents files uploaded to Cloudinary\nmodel Upload {\n  id                String   @id @default(cuid())\n  cloudinaryAssetId String   @unique\n  publicId          String\n  url               String\n  eagerUrl          String?\n  format            String\n  resourceType      String\n  size              Int\n  pages             Int?\n  originalFilename  String\n  uploadedAt        DateTime\n  uploadedById      String // FK to User who uploaded the file\n  createdAt         DateTime @default(now())\n  updatedAt         DateTime @updatedAt\n\n  // Relations\n  uploadedBy            User                   @relation(\"UploadedBy\", fields: [uploadedById], references: [id], onDelete: Cascade)\n  kitUploads            KitUpload[]\n  mobileSuitUploads     MobileSuitUpload[]\n  productLineLogos      ProductLine[]\n  buildMilestoneUploads BuildMilestoneUpload[]\n  buildFeaturedImages   Build[]                @relation(\"BuildFeaturedImage\")\n\n  @@map(\"uploads\")\n}\n\n// KitImageType enum for categorizing kit images\nenum KitImageType {\n  BOX_ART\n  PRODUCT_SHOTS\n  RUNNERS\n  MANUAL\n  PROTOTYPE\n}\n\n// Junction table for many-to-many relationship between Kit and Upload\nmodel KitUpload {\n  id        String       @id @default(cuid())\n  kitId     String\n  uploadId  String\n  caption   String?\n  order     Int?\n  type      KitImageType\n  createdAt DateTime     @default(now())\n  updatedAt DateTime     @updatedAt\n\n  // Relations\n  kit    Kit    @relation(fields: [kitId], references: [id], onDelete: Cascade)\n  upload Upload @relation(fields: [uploadId], references: [id], onDelete: Cascade)\n\n  @@unique([kitId, uploadId])\n  @@map(\"kit_uploads\")\n}\n\n// Junction table for many-to-many relationship between MobileSuit and Upload\nmodel MobileSuitUpload {\n  id           String   @id @default(cuid())\n  mobileSuitId String\n  uploadId     String\n  caption      String?\n  order        Int?\n  createdAt    DateTime @default(now())\n  updatedAt    DateTime @updatedAt\n\n  // Relations\n  mobileSuit MobileSuit @relation(fields: [mobileSuitId], references: [id], onDelete: Cascade)\n  upload     Upload     @relation(fields: [uploadId], references: [id], onDelete: Cascade)\n\n  @@unique([mobileSuitId, uploadId])\n  @@map(\"mobile_suit_uploads\")\n}\n\n// Junction table for many-to-many relationship between BuildMilestone and Upload\nmodel BuildMilestoneUpload {\n  id               String   @id @default(cuid())\n  buildMilestoneId String\n  uploadId         String\n  caption          String?\n  order            Int?\n  createdAt        DateTime @default(now())\n  updatedAt        DateTime @updatedAt\n\n  // Relations\n  buildMilestone BuildMilestone @relation(fields: [buildMilestoneId], references: [id], onDelete: Cascade)\n  upload         Upload         @relation(fields: [uploadId], references: [id], onDelete: Cascade)\n\n  @@unique([buildMilestoneId, uploadId])\n  @@map(\"build_milestone_uploads\")\n}\n\n// User model for Clerk integration\nmodel User {\n  id        String   @id // Clerk user ID\n  email     String   @unique\n  username  String?  @unique\n  firstName String?\n  lastName  String?\n  imageUrl  String?\n  avatarUrl String?\n  isAdmin   Boolean  @default(false)\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  // Gunpla Sekai specific fields\n  bio                String? // User bio/description\n  instagramUrl       String? // Instagram profile URL\n  twitterUrl         String? // Twitter/X profile URL\n  youtubeUrl         String? // YouTube channel URL\n  portfolioUrl       String? // Personal portfolio/hobby site\n  bannerImageUrl     String? // Profile banner image\n  themeColor         String? // Profile theme color (hex)\n  isPublic           Boolean @default(true) // Profile visibility\n  showCollections    Boolean @default(true) // Show collections publicly\n  showBuilds         Boolean @default(true) // Show builds publicly\n  showActivity       Boolean @default(true) // Show activity feed publicly\n  showBadges         Boolean @default(true) // Show badges publicly\n  emailNotifications Boolean @default(true) // Email notification preferences\n\n  // Relations\n  collections   UserKitCollection[]\n  builds        Build[]\n  reviews       Review[]\n  store         UserStore?\n  uploads       Upload[]            @relation(\"UploadedBy\")\n  buildComments BuildComment[]\n\n  @@map(\"users\")\n}\n\n// Collection status enum\nenum CollectionStatus {\n  WISHLIST\n  PREORDER\n  BACKLOG\n  IN_PROGRESS\n  BUILT\n}\n\n// User kit collections (wishlist, backlog, built)\nmodel UserKitCollection {\n  id        String           @id @default(cuid())\n  userId    String\n  kitId     String\n  status    CollectionStatus\n  notes     String?\n  addedAt   DateTime         @default(now())\n  updatedAt DateTime         @updatedAt\n\n  // Relations\n  user User @relation(fields: [userId], references: [id], onDelete: Cascade)\n  kit  Kit  @relation(fields: [kitId], references: [id], onDelete: Cascade)\n\n  @@unique([userId, kitId])\n  @@index([userId])\n  @@index([kitId])\n  @@index([status])\n  @@index([userId, status])\n  @@map(\"user_kit_collections\")\n}\n\n// Review categories enum\nenum ReviewCategory {\n  BUILD_QUALITY_ENGINEERING\n  ARTICULATION_POSEABILITY\n  DETAIL_ACCURACY\n  AESTHETICS_PROPORTIONS\n  ACCESSORIES_GIMMICKS\n  VALUE_EXPERIENCE\n}\n\n// Main review model\nmodel Review {\n  id           String   @id @default(cuid())\n  userId       String\n  kitId        String\n  title        String?\n  content      String?\n  overallScore Float // Auto-calculated average of category scores (not user input)\n  createdAt    DateTime @default(now())\n  updatedAt    DateTime @updatedAt\n\n  // Relations\n  user           User          @relation(fields: [userId], references: [id], onDelete: Cascade)\n  kit            Kit           @relation(fields: [kitId], references: [id], onDelete: Cascade)\n  categoryScores ReviewScore[]\n\n  @@unique([userId, kitId]) // One review per user per kit\n  @@index([kitId])\n  @@index([userId])\n  @@index([overallScore])\n  @@index([createdAt])\n  @@map(\"reviews\")\n}\n\n// Individual category scores\nmodel ReviewScore {\n  id       String         @id @default(cuid())\n  reviewId String\n  category ReviewCategory\n  score    Int // 1-10 scale\n  notes    String?\n\n  // Relations\n  review Review @relation(fields: [reviewId], references: [id], onDelete: Cascade)\n\n  @@unique([reviewId, category])\n  @@map(\"review_scores\")\n}\n\n// Build status enum\nenum BuildStatus {\n  PLANNING\n  IN_PROGRESS\n  COMPLETED\n  ON_HOLD\n}\n\n// Main build model\nmodel Build {\n  id              String      @id @default(cuid())\n  userId          String\n  kitId           String\n  title           String\n  description     String?\n  status          BuildStatus @default(PLANNING)\n  startedAt       DateTime?\n  completedAt     DateTime?\n  featuredImageId String?\n  createdAt       DateTime    @default(now())\n  updatedAt       DateTime    @updatedAt\n\n  // Relations\n  user          User             @relation(fields: [userId], references: [id], onDelete: Cascade)\n  kit           Kit              @relation(fields: [kitId], references: [id], onDelete: Cascade)\n  featuredImage Upload?          @relation(\"BuildFeaturedImage\", fields: [featuredImageId], references: [id], onDelete: SetNull)\n  milestones    BuildMilestone[]\n  comments      BuildComment[]\n\n  @@index([userId])\n  @@index([kitId])\n  @@index([status])\n  @@index([createdAt])\n  @@map(\"builds\")\n}\n\n// Build milestone types\nenum MilestoneType {\n  ACQUISITION\n  PLANNING\n  BUILD\n  PAINTING\n  PANEL_LINING\n  DECALS\n  TOPCOAT\n  PHOTOGRAPHY\n  COMPLETION\n}\n\n// Build milestones for progress tracking\nmodel BuildMilestone {\n  id          String        @id @default(cuid())\n  buildId     String\n  type        MilestoneType\n  title       String\n  description String?\n  imageUrls   String[]      @default([])\n  completedAt DateTime?\n  order       Int\n  createdAt   DateTime      @default(now())\n  updatedAt   DateTime      @updatedAt\n\n  // Relations\n  build   Build                  @relation(fields: [buildId], references: [id], onDelete: Cascade)\n  uploads BuildMilestoneUpload[]\n\n  @@map(\"build_milestones\")\n}\n\n// Build comments for community engagement\nmodel BuildComment {\n  id        String   @id @default(cuid())\n  buildId   String\n  userId    String\n  content   String\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  // Relations\n  build Build @relation(fields: [buildId], references: [id], onDelete: Cascade)\n  user  User  @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@map(\"build_comments\")\n}\n\n// User store model\nmodel UserStore {\n  id          String   @id @default(cuid())\n  userId      String   @unique\n  name        String\n  description String?\n  location    String?\n  createdAt   DateTime @default(now())\n  updatedAt   DateTime @updatedAt\n\n  // Relations\n  user     User                 @relation(fields: [userId], references: [id], onDelete: Cascade)\n  listings MarketplaceListing[]\n\n  @@map(\"user_stores\")\n}\n\n// Marketplace listings\nmodel MarketplaceListing {\n  id          String   @id @default(cuid())\n  storeId     String\n  kitId       String\n  title       String\n  description String?\n  price       Int // Price in cents\n  currency    String   @default(\"JPY\")\n  imageUrls   String[] @default([])\n  available   Boolean  @default(true)\n  createdAt   DateTime @default(now())\n  updatedAt   DateTime @updatedAt\n\n  // Relations\n  store UserStore @relation(fields: [storeId], references: [id], onDelete: Cascade)\n  kit   Kit       @relation(fields: [kitId], references: [id], onDelete: Cascade)\n\n  @@index([storeId])\n  @@index([kitId])\n  @@index([available])\n  @@index([price])\n  @@index([createdAt])\n  @@map(\"marketplace_listings\")\n}\n",
  "inlineSchemaHash": "2ac9e5e6e6722b79db0761ba28a2c07e59e0671f2b5b2673daf46e66b6dc99e6",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"Timeline\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"slug\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"series\",\"kind\":\"object\",\"type\":\"Series\",\"relationName\":\"SeriesToTimeline\"}],\"dbName\":\"timelines\"},\"Series\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"slug\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"timelineId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"scrapedImages\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"timeline\",\"kind\":\"object\",\"type\":\"Timeline\",\"relationName\":\"SeriesToTimeline\"},{\"name\":\"mobileSuits\",\"kind\":\"object\",\"type\":\"MobileSuit\",\"relationName\":\"MobileSuitToSeries\"},{\"name\":\"kits\",\"kind\":\"object\",\"type\":\"Kit\",\"relationName\":\"KitToSeries\"}],\"dbName\":\"series\"},\"MobileSuit\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"slug\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"seriesId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"scrapedImages\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"series\",\"kind\":\"object\",\"type\":\"Series\",\"relationName\":\"MobileSuitToSeries\"},{\"name\":\"kits\",\"kind\":\"object\",\"type\":\"KitMobileSuit\",\"relationName\":\"KitMobileSuitToMobileSuit\"},{\"name\":\"uploads\",\"kind\":\"object\",\"type\":\"MobileSuitUpload\",\"relationName\":\"MobileSuitToMobileSuitUpload\"}],\"dbName\":\"mobile_suits\"},\"Grade\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"slug\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"productLines\",\"kind\":\"object\",\"type\":\"ProductLine\",\"relationName\":\"GradeToProductLine\"}],\"dbName\":\"grades\"},\"ProductLine\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"slug\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"gradeId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"logoId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"scrapedImage\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"grade\",\"kind\":\"object\",\"type\":\"Grade\",\"relationName\":\"GradeToProductLine\"},{\"name\":\"logo\",\"kind\":\"object\",\"type\":\"Upload\",\"relationName\":\"ProductLineToUpload\"},{\"name\":\"kits\",\"kind\":\"object\",\"type\":\"Kit\",\"relationName\":\"KitToProductLine\"}],\"dbName\":\"product_lines\"},\"ReleaseType\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"slug\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"kits\",\"kind\":\"object\",\"type\":\"Kit\",\"relationName\":\"KitToReleaseType\"}],\"dbName\":\"release_types\"},\"Kit\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"slug\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"number\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"variant\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"releaseDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"priceYen\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"region\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"boxArt\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"notes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"manualLinks\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"scrapedImages\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"potentialBaseKit\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"productLineId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"seriesId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"releaseTypeId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"baseKitId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"productLine\",\"kind\":\"object\",\"type\":\"ProductLine\",\"relationName\":\"KitToProductLine\"},{\"name\":\"series\",\"kind\":\"object\",\"type\":\"Series\",\"relationName\":\"KitToSeries\"},{\"name\":\"releaseType\",\"kind\":\"object\",\"type\":\"ReleaseType\",\"relationName\":\"KitToReleaseType\"},{\"name\":\"baseKit\",\"kind\":\"object\",\"type\":\"Kit\",\"relationName\":\"KitVariants\"},{\"name\":\"variants\",\"kind\":\"object\",\"type\":\"Kit\",\"relationName\":\"KitVariants\"},{\"name\":\"mobileSuits\",\"kind\":\"object\",\"type\":\"KitMobileSuit\",\"relationName\":\"KitToKitMobileSuit\"},{\"name\":\"uploads\",\"kind\":\"object\",\"type\":\"KitUpload\",\"relationName\":\"KitToKitUpload\"},{\"name\":\"collections\",\"kind\":\"object\",\"type\":\"UserKitCollection\",\"relationName\":\"KitToUserKitCollection\"},{\"name\":\"reviews\",\"kind\":\"object\",\"type\":\"Review\",\"relationName\":\"KitToReview\"},{\"name\":\"builds\",\"kind\":\"object\",\"type\":\"Build\",\"relationName\":\"BuildToKit\"},{\"name\":\"listings\",\"kind\":\"object\",\"type\":\"MarketplaceListing\",\"relationName\":\"KitToMarketplaceListing\"}],\"dbName\":\"kits\"},\"KitMobileSuit\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"kitId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"mobileSuitId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"kit\",\"kind\":\"object\",\"type\":\"Kit\",\"relationName\":\"KitToKitMobileSuit\"},{\"name\":\"mobileSuit\",\"kind\":\"object\",\"type\":\"MobileSuit\",\"relationName\":\"KitMobileSuitToMobileSuit\"}],\"dbName\":\"kit_mobile_suits\"},\"Upload\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"cloudinaryAssetId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"publicId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"url\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"eagerUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"format\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"resourceType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"size\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"pages\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"originalFilename\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"uploadedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"uploadedById\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"uploadedBy\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UploadedBy\"},{\"name\":\"kitUploads\",\"kind\":\"object\",\"type\":\"KitUpload\",\"relationName\":\"KitUploadToUpload\"},{\"name\":\"mobileSuitUploads\",\"kind\":\"object\",\"type\":\"MobileSuitUpload\",\"relationName\":\"MobileSuitUploadToUpload\"},{\"name\":\"productLineLogos\",\"kind\":\"object\",\"type\":\"ProductLine\",\"relationName\":\"ProductLineToUpload\"},{\"name\":\"buildMilestoneUploads\",\"kind\":\"object\",\"type\":\"BuildMilestoneUpload\",\"relationName\":\"BuildMilestoneUploadToUpload\"},{\"name\":\"buildFeaturedImages\",\"kind\":\"object\",\"type\":\"Build\",\"relationName\":\"BuildFeaturedImage\"}],\"dbName\":\"uploads\"},\"KitUpload\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"kitId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"uploadId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"caption\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"order\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"type\",\"kind\":\"enum\",\"type\":\"KitImageType\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"kit\",\"kind\":\"object\",\"type\":\"Kit\",\"relationName\":\"KitToKitUpload\"},{\"name\":\"upload\",\"kind\":\"object\",\"type\":\"Upload\",\"relationName\":\"KitUploadToUpload\"}],\"dbName\":\"kit_uploads\"},\"MobileSuitUpload\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"mobileSuitId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"uploadId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"caption\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"order\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"mobileSuit\",\"kind\":\"object\",\"type\":\"MobileSuit\",\"relationName\":\"MobileSuitToMobileSuitUpload\"},{\"name\":\"upload\",\"kind\":\"object\",\"type\":\"Upload\",\"relationName\":\"MobileSuitUploadToUpload\"}],\"dbName\":\"mobile_suit_uploads\"},\"BuildMilestoneUpload\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"buildMilestoneId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"uploadId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"caption\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"order\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"buildMilestone\",\"kind\":\"object\",\"type\":\"BuildMilestone\",\"relationName\":\"BuildMilestoneToBuildMilestoneUpload\"},{\"name\":\"upload\",\"kind\":\"object\",\"type\":\"Upload\",\"relationName\":\"BuildMilestoneUploadToUpload\"}],\"dbName\":\"build_milestone_uploads\"},\"User\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"username\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"firstName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"lastName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"imageUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"avatarUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isAdmin\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"bio\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"instagramUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"twitterUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"youtubeUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"portfolioUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"bannerImageUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"themeColor\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isPublic\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"showCollections\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"showBuilds\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"showActivity\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"showBadges\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"emailNotifications\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"collections\",\"kind\":\"object\",\"type\":\"UserKitCollection\",\"relationName\":\"UserToUserKitCollection\"},{\"name\":\"builds\",\"kind\":\"object\",\"type\":\"Build\",\"relationName\":\"BuildToUser\"},{\"name\":\"reviews\",\"kind\":\"object\",\"type\":\"Review\",\"relationName\":\"ReviewToUser\"},{\"name\":\"store\",\"kind\":\"object\",\"type\":\"UserStore\",\"relationName\":\"UserToUserStore\"},{\"name\":\"uploads\",\"kind\":\"object\",\"type\":\"Upload\",\"relationName\":\"UploadedBy\"},{\"name\":\"buildComments\",\"kind\":\"object\",\"type\":\"BuildComment\",\"relationName\":\"BuildCommentToUser\"}],\"dbName\":\"users\"},\"UserKitCollection\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"kitId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"CollectionStatus\"},{\"name\":\"notes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"addedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserToUserKitCollection\"},{\"name\":\"kit\",\"kind\":\"object\",\"type\":\"Kit\",\"relationName\":\"KitToUserKitCollection\"}],\"dbName\":\"user_kit_collections\"},\"Review\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"kitId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"content\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"overallScore\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ReviewToUser\"},{\"name\":\"kit\",\"kind\":\"object\",\"type\":\"Kit\",\"relationName\":\"KitToReview\"},{\"name\":\"categoryScores\",\"kind\":\"object\",\"type\":\"ReviewScore\",\"relationName\":\"ReviewToReviewScore\"}],\"dbName\":\"reviews\"},\"ReviewScore\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"reviewId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"category\",\"kind\":\"enum\",\"type\":\"ReviewCategory\"},{\"name\":\"score\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"notes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"review\",\"kind\":\"object\",\"type\":\"Review\",\"relationName\":\"ReviewToReviewScore\"}],\"dbName\":\"review_scores\"},\"Build\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"kitId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"BuildStatus\"},{\"name\":\"startedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"completedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"featuredImageId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"BuildToUser\"},{\"name\":\"kit\",\"kind\":\"object\",\"type\":\"Kit\",\"relationName\":\"BuildToKit\"},{\"name\":\"featuredImage\",\"kind\":\"object\",\"type\":\"Upload\",\"relationName\":\"BuildFeaturedImage\"},{\"name\":\"milestones\",\"kind\":\"object\",\"type\":\"BuildMilestone\",\"relationName\":\"BuildToBuildMilestone\"},{\"name\":\"comments\",\"kind\":\"object\",\"type\":\"BuildComment\",\"relationName\":\"BuildToBuildComment\"}],\"dbName\":\"builds\"},\"BuildMilestone\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"buildId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"enum\",\"type\":\"MilestoneType\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"imageUrls\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"completedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"order\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"build\",\"kind\":\"object\",\"type\":\"Build\",\"relationName\":\"BuildToBuildMilestone\"},{\"name\":\"uploads\",\"kind\":\"object\",\"type\":\"BuildMilestoneUpload\",\"relationName\":\"BuildMilestoneToBuildMilestoneUpload\"}],\"dbName\":\"build_milestones\"},\"BuildComment\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"buildId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"content\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"build\",\"kind\":\"object\",\"type\":\"Build\",\"relationName\":\"BuildToBuildComment\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"BuildCommentToUser\"}],\"dbName\":\"build_comments\"},\"UserStore\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"location\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserToUserStore\"},{\"name\":\"listings\",\"kind\":\"object\",\"type\":\"MarketplaceListing\",\"relationName\":\"MarketplaceListingToUserStore\"}],\"dbName\":\"user_stores\"},\"MarketplaceListing\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"storeId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"kitId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"price\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"currency\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"imageUrls\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"available\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"store\",\"kind\":\"object\",\"type\":\"UserStore\",\"relationName\":\"MarketplaceListingToUserStore\"},{\"name\":\"kit\",\"kind\":\"object\",\"type\":\"Kit\",\"relationName\":\"KitToMarketplaceListing\"}],\"dbName\":\"marketplace_listings\"}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

