
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('./runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.0
 * Query Engine version: 1c57fdcd7e44b29b9313256c76699e91c3ac3c43
 */
Prisma.prismaVersion = {
  client: "6.16.0",
  engine: "1c57fdcd7e44b29b9313256c76699e91c3ac3c43"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.TimelineScalarFieldEnum = {
  id: 'id',
  name: 'name',
  slug: 'slug',
  description: 'description',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SeriesScalarFieldEnum = {
  id: 'id',
  name: 'name',
  slug: 'slug',
  description: 'description',
  timelineId: 'timelineId',
  scrapedImages: 'scrapedImages',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.MobileSuitScalarFieldEnum = {
  id: 'id',
  name: 'name',
  slug: 'slug',
  description: 'description',
  seriesId: 'seriesId',
  scrapedImages: 'scrapedImages',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.GradeScalarFieldEnum = {
  id: 'id',
  name: 'name',
  slug: 'slug',
  description: 'description',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ProductLineScalarFieldEnum = {
  id: 'id',
  name: 'name',
  slug: 'slug',
  description: 'description',
  gradeId: 'gradeId',
  logoId: 'logoId',
  scrapedImage: 'scrapedImage',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ReleaseTypeScalarFieldEnum = {
  id: 'id',
  name: 'name',
  slug: 'slug',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.KitScalarFieldEnum = {
  id: 'id',
  name: 'name',
  slug: 'slug',
  number: 'number',
  variant: 'variant',
  releaseDate: 'releaseDate',
  priceYen: 'priceYen',
  region: 'region',
  boxArt: 'boxArt',
  notes: 'notes',
  manualLinks: 'manualLinks',
  scrapedImages: 'scrapedImages',
  potentialBaseKit: 'potentialBaseKit',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  productLineId: 'productLineId',
  seriesId: 'seriesId',
  releaseTypeId: 'releaseTypeId',
  baseKitId: 'baseKitId'
};

exports.Prisma.KitMobileSuitScalarFieldEnum = {
  id: 'id',
  kitId: 'kitId',
  mobileSuitId: 'mobileSuitId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.UploadScalarFieldEnum = {
  id: 'id',
  cloudinaryAssetId: 'cloudinaryAssetId',
  publicId: 'publicId',
  url: 'url',
  eagerUrl: 'eagerUrl',
  format: 'format',
  resourceType: 'resourceType',
  size: 'size',
  pages: 'pages',
  originalFilename: 'originalFilename',
  uploadedAt: 'uploadedAt',
  uploadedById: 'uploadedById',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.KitUploadScalarFieldEnum = {
  id: 'id',
  kitId: 'kitId',
  uploadId: 'uploadId',
  caption: 'caption',
  order: 'order',
  type: 'type',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.MobileSuitUploadScalarFieldEnum = {
  id: 'id',
  mobileSuitId: 'mobileSuitId',
  uploadId: 'uploadId',
  caption: 'caption',
  order: 'order',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.BuildMilestoneUploadScalarFieldEnum = {
  id: 'id',
  buildMilestoneId: 'buildMilestoneId',
  uploadId: 'uploadId',
  caption: 'caption',
  order: 'order',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  email: 'email',
  username: 'username',
  firstName: 'firstName',
  lastName: 'lastName',
  imageUrl: 'imageUrl',
  avatarUrl: 'avatarUrl',
  isAdmin: 'isAdmin',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  bio: 'bio',
  instagramUrl: 'instagramUrl',
  twitterUrl: 'twitterUrl',
  youtubeUrl: 'youtubeUrl',
  portfolioUrl: 'portfolioUrl',
  bannerImageUrl: 'bannerImageUrl',
  themeColor: 'themeColor',
  isPublic: 'isPublic',
  showCollections: 'showCollections',
  showBuilds: 'showBuilds',
  showActivity: 'showActivity',
  showBadges: 'showBadges',
  emailNotifications: 'emailNotifications'
};

exports.Prisma.UserKitCollectionScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  kitId: 'kitId',
  status: 'status',
  notes: 'notes',
  addedAt: 'addedAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ReviewScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  kitId: 'kitId',
  title: 'title',
  content: 'content',
  overallScore: 'overallScore',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ReviewScoreScalarFieldEnum = {
  id: 'id',
  reviewId: 'reviewId',
  category: 'category',
  score: 'score',
  notes: 'notes'
};

exports.Prisma.ReviewFeedbackScalarFieldEnum = {
  id: 'id',
  reviewId: 'reviewId',
  userId: 'userId',
  isHelpful: 'isHelpful',
  createdAt: 'createdAt'
};

exports.Prisma.BuildScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  kitId: 'kitId',
  title: 'title',
  description: 'description',
  status: 'status',
  startedAt: 'startedAt',
  completedAt: 'completedAt',
  featuredImageId: 'featuredImageId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.BuildMilestoneScalarFieldEnum = {
  id: 'id',
  buildId: 'buildId',
  type: 'type',
  title: 'title',
  description: 'description',
  imageUrls: 'imageUrls',
  completedAt: 'completedAt',
  order: 'order',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.BuildCommentScalarFieldEnum = {
  id: 'id',
  buildId: 'buildId',
  userId: 'userId',
  content: 'content',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.UserStoreScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  name: 'name',
  description: 'description',
  location: 'location',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.MarketplaceListingScalarFieldEnum = {
  id: 'id',
  storeId: 'storeId',
  kitId: 'kitId',
  title: 'title',
  description: 'description',
  price: 'price',
  currency: 'currency',
  imageUrls: 'imageUrls',
  available: 'available',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};
exports.KitImageType = exports.$Enums.KitImageType = {
  BOX_ART: 'BOX_ART',
  PRODUCT_SHOTS: 'PRODUCT_SHOTS',
  RUNNERS: 'RUNNERS',
  MANUAL: 'MANUAL',
  PROTOTYPE: 'PROTOTYPE'
};

exports.CollectionStatus = exports.$Enums.CollectionStatus = {
  WISHLIST: 'WISHLIST',
  PREORDER: 'PREORDER',
  BACKLOG: 'BACKLOG',
  IN_PROGRESS: 'IN_PROGRESS',
  BUILT: 'BUILT'
};

exports.ReviewCategory = exports.$Enums.ReviewCategory = {
  BUILD_QUALITY_ENGINEERING: 'BUILD_QUALITY_ENGINEERING',
  ARTICULATION_POSEABILITY: 'ARTICULATION_POSEABILITY',
  DETAIL_ACCURACY: 'DETAIL_ACCURACY',
  AESTHETICS_PROPORTIONS: 'AESTHETICS_PROPORTIONS',
  ACCESSORIES_GIMMICKS: 'ACCESSORIES_GIMMICKS',
  VALUE_EXPERIENCE: 'VALUE_EXPERIENCE'
};

exports.BuildStatus = exports.$Enums.BuildStatus = {
  PLANNING: 'PLANNING',
  IN_PROGRESS: 'IN_PROGRESS',
  COMPLETED: 'COMPLETED',
  ON_HOLD: 'ON_HOLD'
};

exports.MilestoneType = exports.$Enums.MilestoneType = {
  ACQUISITION: 'ACQUISITION',
  PLANNING: 'PLANNING',
  BUILD: 'BUILD',
  PAINTING: 'PAINTING',
  PANEL_LINING: 'PANEL_LINING',
  DECALS: 'DECALS',
  TOPCOAT: 'TOPCOAT',
  PHOTOGRAPHY: 'PHOTOGRAPHY',
  COMPLETION: 'COMPLETION'
};

exports.Prisma.ModelName = {
  Timeline: 'Timeline',
  Series: 'Series',
  MobileSuit: 'MobileSuit',
  Grade: 'Grade',
  ProductLine: 'ProductLine',
  ReleaseType: 'ReleaseType',
  Kit: 'Kit',
  KitMobileSuit: 'KitMobileSuit',
  Upload: 'Upload',
  KitUpload: 'KitUpload',
  MobileSuitUpload: 'MobileSuitUpload',
  BuildMilestoneUpload: 'BuildMilestoneUpload',
  User: 'User',
  UserKitCollection: 'UserKitCollection',
  Review: 'Review',
  ReviewScore: 'ReviewScore',
  ReviewFeedback: 'ReviewFeedback',
  Build: 'Build',
  BuildMilestone: 'BuildMilestone',
  BuildComment: 'BuildComment',
  UserStore: 'UserStore',
  MarketplaceListing: 'MarketplaceListing'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
