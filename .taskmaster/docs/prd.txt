# Gunpla Sekai – Product Requirements Document

## Overview

**Gunpla Sekai** is a comprehensive community platform for Gundam model kit (Gunpla) enthusiasts. It serves as the definitive database, marketplace, and social hub for collectors and builders worldwide. The platform addresses the fragmented nature of current Gunpla resources by providing:

- **The most detailed Gunpla database** with advanced search and filtering capabilities
- **Community-driven collection management** with wishlist, backlog, and build tracking
- **Comprehensive review system** with 6-category scoring for informed purchasing decisions
- **User-generated marketplace** for buying/selling kits with inventory management
- **Social features** for sharing builds, milestones, and community engagement

**Target Users:**

- **Collectors**: Managing extensive kit collections and wishlists
- **Builders**: Documenting build progress and sharing techniques
- **Newcomers**: Discovering kits through reviews and community recommendations
- **Sellers**: Managing inventory and reaching potential buyers

## Core Features

### 1. Kits Database & Advanced Search

**What it does:** Provides the most comprehensive Gunpla database with sophisticated filtering and search capabilities.

**Why it's important:** Current resources lack detailed metadata and advanced filtering, making kit discovery frustrating for users with specific preferences.

**How it works:**

- **Multi-select filters**: Grade, Product Line, Series, Timeline, Mobile Suits, Release Type
- **Range filters**: Release Date, Review scores (e.g., "aesthetics > 8")
- **Full-text search**: Powered by Meilisearch for fast, typo-tolerant search
- **Advanced sorting**: By review scores, release date, price, community ratings
- **Relationship-based discovery**: Find variants, base kits, and related mobile suits

### 2. User Collection Management

**What it does:** Comprehensive personal collection tracking across four distinct categories.

**Why it's important:** Collectors need organized ways to track ownership status and build progress, currently scattered across spreadsheets and notes.

**How it works:**

- **Wishlist**: Kits desired but not owned
- **Backlog**: Owned kits awaiting construction
- **Builds**: Completed kits (publicly viewable with photos/reviews)
- **Starred**: Quick-access favorites for reference
- **Status transitions**: Seamless movement between categories as ownership/build status changes

### 3. 6-Category Review System

**What it does:** Structured review system breaking down kit quality across specific evaluation criteria.

**Why it's important:** Generic 5-star ratings don't capture the nuanced aspects that matter to builders (articulation vs. aesthetics vs. build quality).

**How it works:**

- **Gated reviews**: Only users with kits marked as "built" can review
- **Six scoring categories** (1-10 scale):
  1. **Build Quality & Engineering** – Part fit, stability, construction design
  2. **Articulation & Poseability** – Range of motion and posing capability
  3. **Detail & Accuracy** – Screen accuracy, panel lines, color separation
  4. **Aesthetics & Proportions** – Visual appeal and shelf presence
  5. **Accessories & Gimmicks** – Weapons, effect parts, special features
  6. **Value & Experience** – Price-to-quality ratio and build enjoyment
- **Contextual notes**: Optional explanatory text for each category
- **Aggregate scoring**: Powers advanced filtering and sorting

### 4. Comprehensive Kit Detail Pages

**What it does:** Central hub for all kit-related information, relationships, and community content.

**Why it's important:** Users need a single source of truth for kit information, including community insights and purchasing options.

**How it works:**

- **Core metadata**: Release info, pricing, descriptions, official images
- **Relationship mapping**: Base kits, variants, sibling kits, associated mobile suits
- **Community content**: User builds, reviews, marketplace listings
- **Store integration**: Both community sellers and official retailer listings

### 5. User-Generated Marketplace

**What it does:** Facebook Marketplace-style system for community buying/selling with inventory management.

**Why it's important:** Current marketplaces lack Gunpla-specific features and don't integrate with collection management.

**How it works:**

- **One store per user**: Personal inventory system
- **Database-driven listings**: Select kits directly from the main database
- **Custom descriptions**: Box condition, modifications, etc.
- **Transaction integration**: Automatic backlog addition for buyers
- **No payment processing**: Facilitates contact, users handle transactions externally

### 6. Build Documentation & Milestones

**What it does:** Comprehensive build progress tracking with milestone-based documentation.

**Why it's important:** Builders want to document their journey and share techniques, while others learn from the process.

**How it works:**

- **Milestone system**: Step-by-step progress tracking
  - Kit acquisition
  - Build phases (head, torso, limbs, etc.)
  - Completion stages
  - Post-processing (panel lining, topcoating)
  - Final photography
- **Rich media**: Multiple images per milestone with captions
- **Social sharing**: Shareable build pages for external platforms
- **Community engagement**: Comments and ratings on completed builds

### 7. Browse by Universe Structure

**What it does:** Hierarchical browsing through Timeline → Series → Mobile Suits → Kits.

**Why it's important:** Fans often seek kits from specific series or featuring particular mobile suits, requiring intuitive navigation.

**How it works:**

- **Timeline pages**: Universal Century, After Colony, etc.
- **Series pages**: Individual anime/manga series within timelines
- **Mobile Suit pages**: Specific mecha with all available kit variations
- **Many-to-many relationships**: Mobile suits can appear across multiple series

## Development Roadmap

### Phase 1: Foundation & MVP (Core Database + Basic Features)

**Scope**: Establish core architecture and basic kit browsing functionality

**Features:**

- ✅ **Database schema**: Complete Prisma models for kits, series, mobile suits
- ✅ **Basic kit listing**: Display kits with filtering by grade, product line
- ✅ **Kit detail pages**: Core information, images, relationships
- **Authentication**: Clerk integration with user profiles
- **Basic search**: Meilisearch setup with kit indexing
- **Responsive design**: Mobile-first UI with Tailwind + Shadcn

**Deliverable**: Functional kit database with search and basic user accounts

### Phase 2: Collection Management (User Features)

**Scope**: Personal collection tracking and user-generated content foundation

**Features:**

- **Collection system**: Wishlist, backlog, built, starred categories
- **User profiles**: Public profiles showing collections and activity
- **Basic build creation**: Simple build entries without milestones
- **Image upload**: Cloudinary integration for user content
- **Collection statistics**: Personal analytics and progress tracking

**Deliverable**: Users can manage collections and create basic build entries

### Phase 3: Review System (Community Validation)

**Scope**: Comprehensive review system to validate kit quality

**Features:**

- **6-category review system**: Structured scoring with validation
- **Review aggregation**: Calculate and display average scores
- **Advanced filtering**: Filter kits by review scores and criteria
- **Review moderation**: Basic reporting and moderation tools
- **Review helpfulness**: Community voting on review quality

**Deliverable**: Robust review system enabling data-driven kit discovery

### Phase 4: Enhanced Build Documentation (Social Features)

**Scope**: Advanced build tracking with milestone system and community engagement

**Features:**

- **Milestone system**: Step-by-step build progress tracking
- **Build galleries**: Rich media presentation with multiple images
- **Build comments**: Community feedback and discussion
- **Build ratings**: Simple 5-star rating system for completed builds
- **Social sharing**: Open Graph integration for external sharing
- **Build discovery**: Browse builds by kit, builder, or recency

**Deliverable**: Comprehensive build documentation platform with social features

### Phase 5: Marketplace Integration (E-commerce)

**Scope**: User-generated marketplace with inventory management

**Features:**

- **User stores**: One store per user with custom branding
- **Inventory management**: Add kits from database with stock tracking
- **Listing creation**: Custom descriptions, pricing, condition notes
- **Buyer-seller messaging**: In-platform communication system
- **Transaction integration**: Automatic collection updates post-purchase
- **Store discovery**: Browse stores by location, specialization, ratings

**Deliverable**: Functional marketplace connecting buyers and sellers

### Phase 6: Advanced Features (Platform Maturity)

**Scope**: Sophisticated features for power users and platform optimization

**Features:**

- **Advanced analytics**: Personal and community statistics dashboards
- **Recommendation engine**: ML-powered kit suggestions based on preferences
- **Official store integration**: Automated price monitoring and affiliate links
- **Mobile app**: React Native app for on-the-go access
- **API access**: Public API for third-party integrations
- **Advanced moderation**: Automated content filtering and community tools

**Deliverable**: Mature platform with advanced features and ecosystem integrations

## Technical Architecture

### System Components

**Frontend (Next.js 15)**

- **App Router**: File-based routing with nested layouts
- **Server Components**: Optimized data fetching and SEO
- **Client Components**: Interactive features (filters, forms, real-time updates)
- **Tailwind CSS v4**: Utility-first styling with custom design system
- **Shadcn/ui**: Consistent component library with accessibility

**Backend Services**

- **Prisma ORM**: Type-safe database operations with PostgreSQL
- **Meilisearch**: Full-text search engine for kit discovery
- **Clerk**: Authentication and user management
- **Cloudinary**: Image storage and optimization
- **Server Actions**: Form handling and data mutations

**Database (PostgreSQL)**

- **Normalized schema**: Efficient relationships between kits, users, reviews
- **Full-text search**: Complementary to Meilisearch for complex queries
- **Audit trails**: Track changes to critical data (reviews, collections)
- **Performance optimization**: Indexes on frequently queried fields
